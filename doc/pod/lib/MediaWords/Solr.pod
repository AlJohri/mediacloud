=head1 NAME

MediaWords::Solr


=head1 DESCRIPTION

functions for searching the solr server


=head1 REQUIRES

L<Time::HiRes> 

L<List::MoreUtils> 

L<MediaWords::Util::Web> 

L<MediaWords::Util::Config> 

L<MediaWords::Solr::PseudoQueries> 

L<MediaWords::Languages::Language> 

L<MediaWords::DBI::Stories> 

L<MediaWords::DB> 

L<Time::HiRes> 

L<List::Util> 

L<JSON> 

L<MediaWords::CommonLibs> 

L<Modern::Perl> 


=head1 METHODS

=head2 get_last_num_found

 get_last_num_found();

get the numFound from the last solr query run


=head2 get_last_sentences_per_story

 get_last_sentences_per_story();

get the ratio of sentence per story for the last search_stories call


=head2 get_live_collection

 get_live_collection();

get the name of the currently live collection, as stored in database_variables in postgres


=head2 get_num_found

 get_num_found();

execute the query and return only the number of documents found


=head2 get_solr_url

 get_solr_url();

get a solr url from the config, returning either the single
url if there is one or a random member of the list if there is
a list


=head2 get_staging_collection

 get_staging_collection();

get the name of the collection that is not get_live_collection()


=head2 query($$;$)

 query($$;$)();

execute a query on the solr server using the given params.
return a hash generated from the json results


=head2 query_encoded_json($$;$)

 query_encoded_json($$;$)();

execute a query on the solr server using the given params.
return the raw encoded json from solr.  return a maximum of
1 million sentences.


=head2 search_for_media

 search_for_media();

return media.* for all media matching the give solr query


=head2 search_for_media_ids

 search_for_media_ids();

return all of the media ids that match the solr query


=head2 search_for_processed_stories_ids($$$$$;$)

 search_for_processed_stories_ids($$$$$;$)();

return the first $num_stories processed_stories_id that match the given query,
sorted by processed_stories_id and with processed_stories_id greater than $last_ps_id.


=head2 search_for_stories

 search_for_stories();

return stories.* for all stories matching the give solr query


=head2 search_for_stories_ids

 search_for_stories_ids();

return all of the story ids that match the solr query


=head2 search_for_stories_with_sentences

 search_for_stories_with_sentences();

limit to first $num_sampled stories $num_sampled is specified.  return first rows returned by solr
if $random is not true (and only an estimate of the total number of matching stories ).  fetch all results
from solr and return a random sample of those rows if $random is true (and an exact count of the number of
matching stories

returns the (optionally sampled) stories and the total number of matching stories.


=head2 swap_live_collection

 swap_live_collection();

swap which collection is live and which is staging



=cut

